<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Pashupati Gupta</title>
    <link>http://pashupati98.github.io/post/</link>
      <atom:link href="http://pashupati98.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Â© 2020</copyright><lastBuildDate>Sat, 06 Jun 2020 21:58:20 +0530</lastBuildDate>
    <image>
      <url>http://pashupati98.github.io/images/icon_hu252286c30f7052a69f81e7654eb6ee38_16312_512x512_fill_lanczos_center_2.png</url>
      <title>Posts</title>
      <link>http://pashupati98.github.io/post/</link>
    </image>
    
    <item>
      <title>Building a Text Classification model using BiLSTM</title>
      <link>http://pashupati98.github.io/post/test/</link>
      <pubDate>Sat, 06 Jun 2020 21:58:20 +0530</pubDate>
      <guid>http://pashupati98.github.io/post/test/</guid>
      <description>&lt;p&gt;Text classification is one of the fundamental tasks in NLP. Almost every NLP system uses text classification somewhere in its backend. For example - The intent classifier of a chatbot, named-entity recognition, auto-tagging, etc.&lt;/p&gt;
&lt;p&gt;There are many approaches to this problem from statistical machine learning models (Logistic, Naive Bays, SVM, etc.) to high-end deep learning models (CNN, RNN, Transformers, etc.). This blog covers the practical aspects (coding) of building a text classification model using a recurrent neural network (BiLSTM). We will use Python and Jupyter Notebook along with several libraries to build an offensive language/text classification model.&lt;/p&gt;
&lt;p&gt;Continue reading on &lt;a href=&#34;https://medium.com/analytics-vidhya/building-a-text-classification-model-using-bilstm-c0548ace26f2&#34;&gt;Medium&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
